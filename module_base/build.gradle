plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    // kotlin
    api rootProject.ext.dependencies.kotlin
    api rootProject.ext.dependencies.core_ktx
    // base相关基类需要使用
    api rootProject.ext.dependencies.appcompat
    // RecyclerView适配器等
    api rootProject.ext.dependencies.material
    // Constraintlayout
    api rootProject.ext.dependencies.constraintlayout

    // 协程
    api rootProject.ext.dependencies.kotlinx_coroutines_core
    api rootProject.ext.dependencies.kotlinx_coroutines_android

    //Jetpack lifecycle
    api rootProject.ext.dependencies.lifecycle_extensions
    api rootProject.ext.dependencies.lifecycle_viewmodel_ktx
    api rootProject.ext.dependencies.lifecycle_livedata_ktx

    // Jetpack Room数据库框架, kapt不能传递，需要在使用的地方引入
//    api rootProject.ext.dependencies.room_runtime
//    kapt rootProject.ext.dependencies.room_compiler

    // Retrofit网络通信框架
    api rootProject.ext.dependencies.retrofit
    api rootProject.ext.dependencies.converter_gson

    // Glide
    api rootProject.ext.dependencies.glide
}