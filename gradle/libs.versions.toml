[versions]
# 编译版本
compileSdkVersion = "31"
minSdkVersion = "19"
targetSdkVersion = "30"
versionCode = "1"
versionName = "1.0"

# 基本库
kotlin = "1.4.21"
core_ktx = "1.3.2"
appcompat = "1.2.0"
material = "1.2.1"
constraintlayout = "2.0.1"

# 测试
junit = "4.13.2"
ext_junit = "1.1.2"
espresso_core = "3.3.0"

# Jetpack lifecycle
lifecycle_extensions = "2.2.0"
lifecycle_viewmodel_ktx = "2.4.0"
lifecycle_livedata_ktx = "2.3.0-beta01"
databinding = "4.1.3"

# Jetpack Room 数据库框架
room_runtime = "2.3.0"
room_compiler = "2.3.0"

# Retrofit 网络通信框架
retrofit = "2.6.1"
converter_gson = "2.6.1"

# 协程
kotlinx_coroutines_core = "1.3.9"
kotlinx_coroutines_android = "1.3.7"

#  multidex
multidex = "2.0.1"

#  Glide
glide = "4.11.0"
glide_compiler = "4.11.0"

#  navigation
navigation_fragment = "2.5.3"
navigation_ui = "2.5.3"

#  volley
volley = "1.2.1"

# httpdns
httpdns = "2.3.0-intl"

[libraries]
# 基本库
kotlin = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin"}
core_ktx = { module = "androidx.core:core-ktx", version.ref = "core_ktx"}
appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat"}
material = { module = "com.google.android.material:material", version.ref = "material"}
constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintlayout"}

# 测试
junit = { module = "junit:junit", version.ref = "junit"}
ext_junit = { module = "androidx.test.ext:junit", version.ref = "ext_junit"}
espresso_core = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso_core"}

# Jetpack lifecycle
lifecycle_extensions = { module = "androidx.lifecycle:lifecycle-extensions", version.ref = "lifecycle_extensions"}
lifecycle_viewmodel_ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle_viewmodel_ktx"}
lifecycle_livedata_ktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycle_livedata_ktx"}
databinding = { module = "com.android.databinding:viewbinding", version.ref = "databinding"}

# Jetpack Room 数据库框架
room_runtime = { module = "androidx.room:room-runtime", version.ref = "room_runtime"}
room_compiler = { module = "androidx.room:room-compiler", version.ref = "room_compiler"}

# Retrofit 网络通信框架
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit"}
converter_gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "converter_gson"}

# 协程
kotlinx_coroutines_core  = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx_coroutines_core"}
kotlinx_coroutines_android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx_coroutines_android"}

#  multidex
multidex = { module = "androidx.multidex:multidex", version.ref = "multidex"}

#  Glide
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide"}
glide_compiler = { module = "com.github.bumptech.glide:compiler", version.ref = "glide_compiler"}

#  navigation
navigation_fragment = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "navigation_fragment"}
navigation_ui = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "navigation_ui"}

#  volley
volley = { module = "com.android.volley:volley", version.ref = "volley"}

# httpdns
httpdns = { module = "com.aliyun.ams:alicloud-android-httpdns", version.ref = "httpdns"}

[bundles]
versionBase = [
    # kotlin
    "kotlin", "core_ktx", "appcompat", "material", "constraintlayout",

    # 协程
    "kotlinx_coroutines_core", "kotlinx_coroutines_android",

    # Jetpack lifecycle
    "lifecycle_extensions", "lifecycle_viewmodel_ktx", "lifecycle_livedata_ktx"
]

versionTest = [
    "junit", "ext_junit", "espresso_core"
]

versionThird = [
    # multidex
    "multidex",

    # Jetpack Room数据库框架, kapt不能传递，需要在使用的地方引入
    "room_runtime", "room_compiler",

    # Retrofit网络通信框架
    "retrofit", "converter_gson",

    # Glide
    "glide", "glide_compiler",

    # navigation
    "navigation_fragment", "navigation_ui",

    # volley
    "volley"
]

[plugins]